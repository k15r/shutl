name: Create Release

on:
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GH_REPO: ${{ github.repository }}

permissions:
  contents: write

jobs:
  create-tag-and-draft-release:
    name: Create Tag and Draft Release
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Current Version
        id: get_version
        run: echo "version=$(grep '^version' Cargo.toml | cut -d '"' -f 2)" >> $GITHUB_OUTPUT

      - name: Tag the Repository
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git tag -a "v${{ steps.get_version.outputs.version }}" -m "Release v${{ steps.get_version.outputs.version }}"
          git push origin "v${{ steps.get_version.outputs.version }}"

      - name: Create GitHub Draft Release
        run: |
          gh release create v${{ steps.get_version.outputs.version }} \
            --title "Release v${{ steps.get_version.outputs.version }}" \
            --generate-notes \
            --draft \
            --prerelease

  build-and-upload:
    name: Build and Upload Artifacts
    runs-on: ${{ matrix.os }}
    needs: create-tag-and-draft-release
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            artifact_name: shutl
            target: x86_64-unknown-linux-gnu
          - os: macos-latest
            artifact_name: shutl
            target: x86_64-apple-darwin
          - os: macos-latest
            artifact_name: shutl
            target: aarch64-apple-darwin

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}
          components: rustfmt, clippy

      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} --verbose

      - name: Create Release Archive
        shell: bash
        run: |
          cd target/${{ matrix.target }}/release
          tar czf ${{ github.workspace }}/${{ matrix.target }}.tar.gz ${{ matrix.artifact_name }}
          cd ../../..

      - name: Upload Release Artifact
        run: |
          gh release upload v${{ needs.create-tag-and-draft-release.outputs.version }} \
          --clobber \
          ${{ github.workspace }}/${{ matrix.target }}.tar.gz

  publish-release:
    name: Publish Release
    runs-on: ubuntu-latest
    needs:
    - build-and-upload
    - create-tag-and-draft-release
    steps:
      - name: Publish Release
        run: |
          gh release edit v${{ needs.create-tag-and-draft-release.outputs.version }} \
            --draft=false \
            --prerelease=false